feat: Sync all 3 screens with new pageSize settings

PHASE 3 COMPLETE: Apply Settings to Screens

CHANGES:

1. client/src/pages/Collections.tsx
   - Import useUserSettings and useUpdateUserSettings
   - Read collectionsPageSize from backend
   - Auto-sync when backend settings change (useEffect)
   - Save local changes to backend (updateSettingsMutation)
   - Bidirectional sync: Settings screen <-> Collections list

2. client/src/pages/CollectionDetail.tsx
   - Fixed to use collectionDetailPageSize (was using itemsPerPage)
   - Read from backend settings
   - Auto-sync when backend settings change
   - Save local changes to backend
   - Bidirectional sync: Settings screen <-> Collection detail

3. client/src/components/collections/CollectionNavigationSidebar.tsx
   - Import useUserSettings
   - Use sidebarPageSize from backend
   - Auto-sync when backend settings change
   - Read-only (no save, sidebar has no pageSize UI)

SYNC FLOW:

Direction 1: Settings screen -> Individual screens
  User changes in Settings screen
  -> Saves to backend
  -> Backend updates user.settings
  -> useUserSettings refetches
  -> useEffect in each screen detects change
  -> Updates local state
  -> Updates localStorage

Direction 2: Individual screens -> Settings screen
  User changes pageSize in Collections/CollectionDetail UI
  -> Updates local state
  -> Saves to localStorage
  -> Calls backend API (collectionsPageSize or collectionDetailPageSize)
  -> Backend updates user.settings
  -> Settings screen shows new value on next load

BENEFITS:
✅ All screens use correct pageSize
✅ Changes in Settings affect all screens
✅ Changes in screens persist to Settings
✅ localStorage as cache layer
✅ Backend as source of truth

STATUS: All 3 screens synced!
